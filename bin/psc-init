#!/usr/bin/env node

const program = require('commander');
const chalk = require('chalk');
const ora = require('ora');
const shell = require('shelljs');
const { exec } = require('child_process');

program.usage('[project-name]');
program.parse(process.argv);

(async function () {
    if (program.args.length < 1) return program.help();

    const APP_NAME = program.args[0];

    if (!APP_NAME) {
        console.log(chalk.red('\n App name should not be empty! \n '));
        return;
    }

    console.log(chalk.white('\n Start generating... \n'));

    const spinner = ora({
        text: 'Initial...',
        color: 'yellow'
    });

    async function init() {
        return new Promise(async resolve => {
            // step1
            shell.mkdir(`${APP_NAME}`);
            shell.cd(`${APP_NAME}`);
            shell.exec(`git init`, { silent: true });
            shell.exec(
                'git remote add psc-structure https://github.com/tienmi/puppeteer-simple-structure.git',
                { silent: true }
            );
            shell.exec('git pull psc-structure master', { silent: true });
            shell.exec('git remote remove psc-structure', { silent: true });
            // step2
            shell.exec(`sed "s/puppeteer-structure/${APP_NAME}/g" package.json > buck`);
            shell.exec(`mv buck package.json`);
            spinner.text = 'Installing must-have dependencies...\n';
            exec('npm install', error => {
                if (error) {
                    console.error(`error: ${error}`);
                }
                resolve();
            });
        });
    }

    spinner.start();
    await init();
    // end
    spinner.succeed();
    console.log(chalk.green('Initialization successful!\n Why not grab a beer and have fun!'));
})();
